@page "/Tecnico/Details/{TecnicoId:int}"
@inject TecnicoService tecnicoService
@inject TipoTecnicoService tipoTecnicoService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Detalles</PageTitle>
	<div class ="container">
		<div class="card shadow">
			@*header*@
			<div class="card-header color-marcos">
				<h4 class="text-white"><strong>Detalles</strong></h4>
			</div>
			@*body*@
			<div class="card-body">
				<ul>
					<li><strong class="text-naranja">Id: </strong><strong>@Tecnicos.TecnicoId</strong></li>
					<li><strong class="text-naranja">Nombre: </strong><strong>@Tecnicos.Nombres</strong></li>
					<li><strong class="text-naranja">Tipo: </strong><strong>@TipoTecnicos?.Descripcion</strong></li>
					<li><strong class="text-naranja">Sueldo: </strong><strong>@Tecnicos.SueldoHora</strong></li>
				</ul>
			</div>
			@*fotter*@
			<div class="card-fotter">
				<div class="card">
					<button class="btn btn-NH bi bi-arrow-return-left" @onclick="Volver"></button>
				</div>
			</div>
		</div>
	</div>

@code {
	[Parameter]
	public int TecnicoId { get; set; }
	public Tecnicos Tecnicos { get; set; } = new Tecnicos();
	public TiposTecnicos TipoTecnicos { get; set; } = new TiposTecnicos();

	protected override async Task OnInitializedAsync()
	{
		Tecnicos = await tecnicoService.Buscar(TecnicoId);	
		TipoTecnicos = await tipoTecnicoService.Buscar(TecnicoId);
	}

	public async Task Volver()
	{
		await Task.CompletedTask;
		navigationManager.NavigateTo("/Tecnico/Index");
	}
}
